{
    "componentChunkName": "component---src-pages-guidelines-typography-code-mdx",
    "path": "/guidelines/typography/code/",
    "result": {"pageContext":{"frontmatter":{"label":"Type is a core part of any offering and critical to how brands express and communicate throughout any experience. Use the Carbon type package to leverage IBM Plex and create effective typography across your products more easily.","title":"Typography","description":"Typography can help create clear hierarchies, organize information, and guide users through a product or experience.","tabs":["Overview","Styling strategies","Type sets","Code"]},"relativePagePath":"/guidelines/typography/code.mdx","titleType":"prepend","MdxNode":{"id":"04f24135-7085-5046-a555-bf787e3ee78b","children":[],"parent":"5249a3bb-d862-53d6-ad20-b52b486e093b","internal":{"content":"---\nlabel:\n  Type is a core part of any offering and critical to how brands express and\n  communicate throughout any experience. Use the Carbon type package to leverage\n  IBM Plex and create effective typography across your products more easily.\ntitle: Typography\ndescription:\n  Typography can help create clear hierarchies, organize information, and guide\n  users through a product or experience.\ntabs: ['Overview', 'Styling strategies', 'Type sets', 'Code']\n---\n\n<PageDescription>\n\nType is a core part of any offering and critical to how brands express and\ncommunicate throughout any experience. Use the Carbon type package to leverage\nIBM Plex and create effective typography across your products more easily.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the type package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/type` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/type\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/type\n```\n\n## Usage\n\nThe `@carbon/type` package enables you to use typography from the IBM Design\nLanguage, including the type scale and fonts, along with typography design\ntokens from the Carbon Design System. It also comes with opinionated defaults\nfor type styles on common elements like `h1`, `h2`, `p`, etc.\n\nYou can use this package by writing the following:\n\n```scss\n@use '@carbon/type';\n// Include type reset\n@include type.reset();\n\n// Include default type styles, targets h1, h2, h3, etc\n@include type.default-type();\n\n// Include utility classes for type-related properties\n@include type.type-classes();\n\n.selector {\n  // Include a type style\n  @include type.style('productive-heading-01');\n}\n```\n\n### Type classes\n\nThe `type-classes` mixin will output a collection of utility CSS that you can\nuse to style a given HTML element with type-related styles.\n\nIn particular, you can use the following classes:\n\n| Class                      | Description                                                                                                                                                                                                           |\n| :------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `.cds--type-{font-family}` | Set the `font-family` property for the given font. This can include `mono`, `sans`, `sans-condensed`, `sans-arabic`, `sans-devanagari`, `sans-hebrew`, `sans-jp`, `sans-kr`, `sans-thai-looped`, `sans-thai`, `serif` |\n| `.cds--type-{font-weight}` | Set the `font-weight` property                                                                                                                                                                                        |\n| `.cds--type-italic`        | Set the `font-style` property to `italic`                                                                                                                                                                             |\n| `.cds--type-{token}`       | Style the HTML element with the given type token                                                                                                                                                                      |\n\n### Type styles\n\nInstead of using a type scale, `@carbon/type` provides tokens that represent\nwhat we call type styles. These tokens have a variety of properties for styling\nhow text is rendered on a page.\n\nYou can find a full reference of the type styles that are available on the\n[Carbon Design System website](https://www.carbondesignsystem.com/guidelines/typography/productive)\n.\n\nYou can include a token in your Sass file by writing:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include type-style('productive-heading-01');\n```\n\nIn addition, if the type style you are using has a fluid style then you can pass\nin `true` as the second argument to `type-style` to enable fluid styles. For\nexample:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include type-style('token-name', true);\n```\n\n### Font-face\n\n`@carbon/type` supports three font-face definitions that you can use to add IBM\nPlex to your project. These font-face definitions include support for:\n\n- IBM Plex Mono\n- IBM Plex Sans\n- IBM Plex Serif\n\nFor most projects, only IBM Plex Mono and IBM Plex Sans is necessary. We also\nprovide IBM Plex Serif if you are building an editorial or marketing project.\n\nThese font-face definitions are pulling the above fonts from Google Fonts. As a\nresult, they are not intended to be used as a production asset for your project.\nWhile you can depend on these for bootstrapping your project, we highly\nrecommend using the fonts from the `@ibm/plex` package and hosting them on a\nglobal CDN.\n\nYou can include each font-face definition by including the corresponding file\nand calling its mixin. For example, if you wanted to include IBM Plex Mono in\nyour project you would write the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n\n@include font-face-mono();\n```\n\nSimilarly, you can include IBM Plex Sans and IBM Plex Serif by writing:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n@import '@carbon/type/scss/font-face/serif';\n\n@include font-face-mono();\n@include font-face-sans();\n@include font-face-serif();\n```\n\n### Type classes\n\nThe recommended way to style your application will be to use our\n[type styles](#type-styles). However, we also offer helper CSS classes for\nspecific use-cases. These are also helpful when quickly prototyping a project.\n\nYou can include type classes in your project by writing the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/classes';\n```\n\n| Selector                  | Description                               |\n| ------------------------- | ----------------------------------------- |\n| `.cds--type-mono`         | Specify the font face as IBM Plex Mono    |\n| `.cds--type-sans`         | Specify the font face as IBM Plex Sans    |\n| `.cds--type-serif`        | Specify the font face as IBM Plex Serif   |\n| `.cds--type-light`        | Specify the font weight as light (300)    |\n| `.cds--type-regular`      | Specify the font weight as regular (400)  |\n| `.cds--type-semibold`     | Specify the font weight as semibold (600) |\n| `.cds--type-italic`       | Specify the font style as italic          |\n| `.cds--type-<type-style>` | Set styles for the given type style       |\n\n### Font family\n\n`@carbon/type` provides the font stacks for all the IBM Plex fonts available.\nYou can access the font family information by including the following import in\nyour Sass file:\n\n```scss\n@import '@carbon/type/scss/font-family';\n```\n\nThe font stacks are available under the `$font-families` variable. You can also\naccess a specific font family by using the `font-family` function by doing:\n\n```scss\n.my-selector {\n  font-family: font-family('mono');\n}\n```\n\nYou can also use the `font-family` mixin to automatically set the `font-family`\nproperty for you:\n\n```scss\n.my-selector {\n  @include font-family('mono');\n}\n```\n\nYou can see all the available font families in `$font-families` .\n\n### Reset\n\nAn optional type reset is provided under the `type-reset` mixin. You can include\nthis mixin by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/reset';\n\n@include type-reset();\n```\n\nThis reset sets some top-level properties on `html` and `body`, namely\n`font-size`, `font-family`, and some `text-rendering` options. We also map the\n`strong` tag to the semibold font weight.\n\n### Type scale\n\nA type scale is provided through the `$type-scale` variable and corresponding\n`type-scale` function and mixin. However, for specifying type styles, the\nrecommendation is to use [type styles](#type-styles) .\n\nIf you are looking to use the type scale, you can include all the scale-related\nutilities and variables by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/scale';\n```\n\nYou can access a specific step in the type scale by using the `type-scale`\nfunction:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  font-size: type-scale(1);\n}\n```\n\nThere is also a `type-scale` mixin that will set `font-size` for your directly:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  @include type-scale(1);\n}\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon type package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/v10/packages/type\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Type package demo\"\n      href=\"https://carbon-elements.netlify.app/type/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"4173fef588f27bc741413ae4d1280ba8","owner":"gatsby-plugin-mdx","counter":4070},"frontmatter":{"label":"Type is a core part of any offering and critical to how brands express and communicate throughout any experience. Use the Carbon type package to leverage IBM Plex and create effective typography across your products more easily.","title":"Typography","description":"Typography can help create clear hierarchies, organize information, and guide users through a product or experience.","tabs":["Overview","Styling strategies","Type sets","Code"]},"exports":{},"rawBody":"---\nlabel:\n  Type is a core part of any offering and critical to how brands express and\n  communicate throughout any experience. Use the Carbon type package to leverage\n  IBM Plex and create effective typography across your products more easily.\ntitle: Typography\ndescription:\n  Typography can help create clear hierarchies, organize information, and guide\n  users through a product or experience.\ntabs: ['Overview', 'Styling strategies', 'Type sets', 'Code']\n---\n\n<PageDescription>\n\nType is a core part of any offering and critical to how brands express and\ncommunicate throughout any experience. Use the Carbon type package to leverage\nIBM Plex and create effective typography across your products more easily.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the type package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/type` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/type\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/type\n```\n\n## Usage\n\nThe `@carbon/type` package enables you to use typography from the IBM Design\nLanguage, including the type scale and fonts, along with typography design\ntokens from the Carbon Design System. It also comes with opinionated defaults\nfor type styles on common elements like `h1`, `h2`, `p`, etc.\n\nYou can use this package by writing the following:\n\n```scss\n@use '@carbon/type';\n// Include type reset\n@include type.reset();\n\n// Include default type styles, targets h1, h2, h3, etc\n@include type.default-type();\n\n// Include utility classes for type-related properties\n@include type.type-classes();\n\n.selector {\n  // Include a type style\n  @include type.style('productive-heading-01');\n}\n```\n\n### Type classes\n\nThe `type-classes` mixin will output a collection of utility CSS that you can\nuse to style a given HTML element with type-related styles.\n\nIn particular, you can use the following classes:\n\n| Class                      | Description                                                                                                                                                                                                           |\n| :------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `.cds--type-{font-family}` | Set the `font-family` property for the given font. This can include `mono`, `sans`, `sans-condensed`, `sans-arabic`, `sans-devanagari`, `sans-hebrew`, `sans-jp`, `sans-kr`, `sans-thai-looped`, `sans-thai`, `serif` |\n| `.cds--type-{font-weight}` | Set the `font-weight` property                                                                                                                                                                                        |\n| `.cds--type-italic`        | Set the `font-style` property to `italic`                                                                                                                                                                             |\n| `.cds--type-{token}`       | Style the HTML element with the given type token                                                                                                                                                                      |\n\n### Type styles\n\nInstead of using a type scale, `@carbon/type` provides tokens that represent\nwhat we call type styles. These tokens have a variety of properties for styling\nhow text is rendered on a page.\n\nYou can find a full reference of the type styles that are available on the\n[Carbon Design System website](https://www.carbondesignsystem.com/guidelines/typography/productive)\n.\n\nYou can include a token in your Sass file by writing:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include type-style('productive-heading-01');\n```\n\nIn addition, if the type style you are using has a fluid style then you can pass\nin `true` as the second argument to `type-style` to enable fluid styles. For\nexample:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include type-style('token-name', true);\n```\n\n### Font-face\n\n`@carbon/type` supports three font-face definitions that you can use to add IBM\nPlex to your project. These font-face definitions include support for:\n\n- IBM Plex Mono\n- IBM Plex Sans\n- IBM Plex Serif\n\nFor most projects, only IBM Plex Mono and IBM Plex Sans is necessary. We also\nprovide IBM Plex Serif if you are building an editorial or marketing project.\n\nThese font-face definitions are pulling the above fonts from Google Fonts. As a\nresult, they are not intended to be used as a production asset for your project.\nWhile you can depend on these for bootstrapping your project, we highly\nrecommend using the fonts from the `@ibm/plex` package and hosting them on a\nglobal CDN.\n\nYou can include each font-face definition by including the corresponding file\nand calling its mixin. For example, if you wanted to include IBM Plex Mono in\nyour project you would write the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n\n@include font-face-mono();\n```\n\nSimilarly, you can include IBM Plex Sans and IBM Plex Serif by writing:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n@import '@carbon/type/scss/font-face/serif';\n\n@include font-face-mono();\n@include font-face-sans();\n@include font-face-serif();\n```\n\n### Type classes\n\nThe recommended way to style your application will be to use our\n[type styles](#type-styles). However, we also offer helper CSS classes for\nspecific use-cases. These are also helpful when quickly prototyping a project.\n\nYou can include type classes in your project by writing the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/classes';\n```\n\n| Selector                  | Description                               |\n| ------------------------- | ----------------------------------------- |\n| `.cds--type-mono`         | Specify the font face as IBM Plex Mono    |\n| `.cds--type-sans`         | Specify the font face as IBM Plex Sans    |\n| `.cds--type-serif`        | Specify the font face as IBM Plex Serif   |\n| `.cds--type-light`        | Specify the font weight as light (300)    |\n| `.cds--type-regular`      | Specify the font weight as regular (400)  |\n| `.cds--type-semibold`     | Specify the font weight as semibold (600) |\n| `.cds--type-italic`       | Specify the font style as italic          |\n| `.cds--type-<type-style>` | Set styles for the given type style       |\n\n### Font family\n\n`@carbon/type` provides the font stacks for all the IBM Plex fonts available.\nYou can access the font family information by including the following import in\nyour Sass file:\n\n```scss\n@import '@carbon/type/scss/font-family';\n```\n\nThe font stacks are available under the `$font-families` variable. You can also\naccess a specific font family by using the `font-family` function by doing:\n\n```scss\n.my-selector {\n  font-family: font-family('mono');\n}\n```\n\nYou can also use the `font-family` mixin to automatically set the `font-family`\nproperty for you:\n\n```scss\n.my-selector {\n  @include font-family('mono');\n}\n```\n\nYou can see all the available font families in `$font-families` .\n\n### Reset\n\nAn optional type reset is provided under the `type-reset` mixin. You can include\nthis mixin by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/reset';\n\n@include type-reset();\n```\n\nThis reset sets some top-level properties on `html` and `body`, namely\n`font-size`, `font-family`, and some `text-rendering` options. We also map the\n`strong` tag to the semibold font weight.\n\n### Type scale\n\nA type scale is provided through the `$type-scale` variable and corresponding\n`type-scale` function and mixin. However, for specifying type styles, the\nrecommendation is to use [type styles](#type-styles) .\n\nIf you are looking to use the type scale, you can include all the scale-related\nutilities and variables by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/scale';\n```\n\nYou can access a specific step in the type scale by using the `type-scale`\nfunction:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  font-size: type-scale(1);\n}\n```\n\nThere is also a `type-scale` mixin that will set `font-size` for your directly:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  @include type-scale(1);\n}\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon type package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/v10/packages/type\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Type package demo\"\n      href=\"https://carbon-elements.netlify.app/type/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/guidelines/typography/code.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","338751667","768070550"]}